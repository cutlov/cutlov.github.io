[{"content":"DeepLearning Proceduere Guide Training data loss large Model bias Bias too small which make the smallest loss not contain there.\nSolution: redesign you model to make it flexible\nsuch as more feature\nOptimization issue This method can\u0026rsquo;t find the smallest loss\nconclusion Compare different model to find this model efficiently. Start from shallower networks(or other model),which are easier to optimize If deeper networks don\u0026rsquo;t obtain smaller loss on training data, then there is optimization issue. testing data loss large(overfitting) Less parameter Less features Early stopping Regularization Dropout Testing set(private) large N-fold cross Validation ","date":"2024-11-01T19:17:03+08:00","permalink":"https://localhost:1313/p/deeplearning_1/","title":"DeepLearning_1"},{"content":"RISC-V 加减运算 1 2 3 4 add x1,x2,x3 #等同于a=b+c，a=x1，b=x2，c=x3 sub x1,x2,x3 #等同于a=b-c，a=x1，b=x2，c=x3 若表示a=b+c+d-e;\n可以表示为\n1 2 3 add x10,x1,x2 add x10,x10,x3 sub x10,x10,x4 若表示f=(g+h)-(i+j);\n可以表示为\n1 2 3 add x5,x20,x21 add x6,x22,x23 sub x19,x5,x6 f=g+10立即数addi x3,x4,10 #addi 用于立即数\n没有减的立即数，因为把10改成-10就可以代表减号了 x0表示硬件级别的0，不可改变\n内存数据加载到内存 以字为单位 1 2 3 lw x10,12(x15) #Reg x10 gets A[3] add x11,x12,x10 #g=h+A sw x10,40(x15) x15是基地址寄存器指向A的地址，12表示偏移字节，3个int有12个字节 上述代码表示为c为\n1 2 3 int A[100]; g=h+A[3]; A[10]=h+A[3] 以byte为单位 有lb和sb\n例如\u0026rsquo;lb x10,3(x11)'\n1 2 3 4 lw x10,12(x15) #value in A[3] add x12,x12,x10 ##可以用上面两条指令替代下面的 addi x12,value #value in A[3] 分支指令 1 2 3 4 beq reg1,reg2,L1 #比较reg1，和reg2，如果相等跳转到L1，不相等执行下一条指令 j label #无条件跳转label 1 2 3 4 5 bne x13,x14,Else #if(i==j) add x10,x11,x12 # f=g+h; j Exit # else; Else:sub x10,x11,x12 # f=g-h; Exit: 我们有blt（小于）,bltu（unsigned，小于）,bge（大于等于）,bgeu（unsigned 大于等于）\n但是没有bgt和ble因为可以调换所以不需要这两个指令\n1 2 3 4 5 6 7 8 9 10 11 12 int A[20]; //add x9,x8,x0 #x9=\u0026amp;A[0] int sum=0; //add x10,x0,x0 #sum for (int i=0;i\u0026lt;20;i++) //add x11,x0,x0 #i sum+=A[i]; //add x13,x0,20 #x13 //Loop: bge x11,x13,Done lw x12,0(x9) #x12 A[i] add x10,x10,x12 #sum addi x9,x9,4 #\u0026amp;A[i+1] addi x11,x11,1 #i++ j loop Done: 逻辑指令 c operators RISC-v \u0026amp; and | or ^ xor \u0026laquo; sll \u0026gt;\u0026gt; srl slli是立即数操作 slli x11,x12,2 #x11=x12\u0026lt;\u0026lt;2 那么如何乘12呢？ 可以先乘4在加上原来数字乘8，最后相加这两个数字\nsrai右移立即数srai x10,x10,4\n调用函数 将参数放入函数能拿到的地方\n控制权交给函数（jal，保存返回地址，并跳转函数位置）\n函数获取他想要的参数\n执行函数\n将返回值放在需要原函数拿的到的地方，恢复函数调用前参数的值\n返回并交还控制权（ret）\n栈 RISC-V的栈区是sp\n1 2 3 4 5 6 7 8 9 10 11 Leaf: addi sp,sp,-8 sw s1,4(sp) sw s0,0(sp) add s0,a0,a1 add s1,a2,a3 aub a0,s0,s1 lw s0,0(sp) lw s1,4(sp) jr ra #ret 等同于\n1 2 3 4 5 int Lead(int g,int h,int i,int j){ int f; f=(g+h)-(i+j); return f; } 总结 拓展 汇编语言的32位机器代码格式\nopcode，funct7+funct3:告知要用什么操作\nrs1:source register\nrs2:second register\nrd:destination register\n立即数格式 ","date":"2024-10-27T15:05:49+08:00","permalink":"https://localhost:1313/p/risc-v/","title":"RISC V"},{"content":"三大存储区 静态存储区(static) 全局变量\n栈存储区(stack) 局部变量,还与函数的迭代有关\n堆存储区(heap) 动态变量，如malloc()申请的区域就在栈(注意区分数据结构的stack和这个stack不同)\n系统使用循环链表将空闲区域连接起来，当malloc要使用时进行分配。\nbest fit\nfirst fit\nnext fit 当free()时相邻的空闲区域会合并 对指针的补充 1 2 3 4 5 int *ptr(){ int y; y=3; return \u0026amp;y; } int main(){ int *stackAddr,content; stackAddr=ptr(); content=*stackAddr; printf(\u0026quot;%d\u0026quot;,content);//3 content=*stackAddr; printf(\u0026quot;%d\u0026quot;,content);//? }\n1 2 3 4 5 以上代码失效的原因*y*在栈空间，过一段时间后就会被覆盖，导致y可能失效 ```c struct foo *f=malloc(sizeof(struct foo*)*10); struct foo *g=f; f=realloc(sizeof(struct foo*)*20); 上面错误类似，f可能不是增长10，而是去其他地方申请20个空间，这样导致g指向一个可能被覆盖的指针\n1 2 3 struct foo *f=malloc(sizeof(struct foo*)*10); f++; free(f); 错误，f与之前地址不匹配，不知道会发生什么事情\n特别注意至少留一个指针指向原来的位置，否则可能发生错误\n1 2 3 4 struct foo *f=malloc(sizeof(struct foo*)*10); f++; free(f); free(f); 错误不要重复释放，不知道会发生什么\n","date":"2024-10-27T09:10:01+08:00","permalink":"https://localhost:1313/p/c%E8%AF%AD%E8%A8%80%E5%AD%98%E5%82%A8%E5%8C%BA/","title":"C语言存储区"},{"content":"指针 指向变量 1 2 3 4 5 6 int y=5; //假设y的地址为123 int z; int *p; //变量p是int的地址 p=\u0026amp;y; //将y的地址（123）赋予p z=*p; //将p地址的值（5）交给z *p=*p+1; //y的值会变成6 同理double,char,struct等可以进行类似的操作\n请注意int *p;*p=5;错误，因为不知道5是哪个地址\n指向函数 1 2 3 int (*fn) (void *,void *)=\u0026amp;foo; //fn是一个接受两个void*指针，并返回一个int值的函数，地址为函数foo (*fn)(x,y);//将调用这个函数 指针结构体的使用 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 typedef struct{ int x; int y; }Point; Point p1; Point p2; point *paddr; paddr=\u0026amp;p2; /*dot notation*/ int h=p1.x; p2.y=p1.y /*arrow notation*/ int h=paddr-\u0026gt;x; int h=(*paddr).x; //上面两行等价 指针与数组 ar[0]等效于*ar\nar[2]等效于*(ar+2)\n例如\n1 2 3 4 char *foo(){ char string[32];...; return string }//is incorrect 改变指针 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 //以下为错误代码 void IncrementPtr(int *p){ p=p+1; } int A[3]={50,60,70}; int *q=A; IncrementPtr(q); printf(\u0026#34;*q=%d\\n\u0026#34;,*q); //正确示范 void IncrementPtr(int **h){ *h=*h+1; } int A[3]={50,60,70}; int *q=A; IncrementPtr(\u0026amp;q); printf(\u0026#34;*q=%d\\n\u0026#34;,*q); 将以上知识点结合 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 #include\u0026lt;stdio.h\u0026gt; int x10(int),x2(int); void mutate_map(int [],int n,int(*)(int)); void print_array(int [],int n); int x2(int n){ return 2*n; } int x10(int n){ return 10*n; } void mutate_map(int A[],int n,int (*fp)(int)){ for(int i=0;i\u0026lt;n;i++){ A[i]=(*fp)(A[i]); } } void print_array(int A[],int n){ for(int i=0;i\u0026lt;n;i++) printf(\u0026#34;%d \u0026#34;,A[i]); printf(\u0026#34;\\n\u0026#34;); } int main(void){ int A[]={3,1,4},n=3; print_array(A,n); mutate_map(A,n,\u0026amp;x2); print_array(A,n); mutate_map(A,n,\u0026amp;x10); print_array(A,n); } //以下为输出 % ./map 3 1 4 6 2 8 60 20 80 申请空间 1 2 3 4 5 6 7 8 ptr=(int *) malloc(sizof(int)) //释放空间否则会内存泄露，当然释放过后就不要重复释放了 free(ptr); int*ip; ip=(int *) malloc(10*sizof(int)); ip=(int *) realloc(ip,20*sizof(int)); ip=(int *) realloc(ip,0);//相当于free(ip) ","date":"2024-10-26T16:34:06+08:00","permalink":"https://localhost:1313/p/%E6%8C%87%E9%92%88/","title":"指针"},{"content":"Markdown教程 文本控制 普通文本信息直接敲就行。\n换行不能直接敲换行键，需要使用 两个空格 加换行键盘。\n连续按两下换行键是分段\n加粗在需要加粗的文本前后使用两个*号或者下划线(特别注意下划线要用空格隔开)\n斜体在需要斜体的文本前后使用一个*号或者一个下划线\n同时斜体和加粗在需要的文本前后在三个*号或者三个下划线\n需要加删除线用波浪符号~在文本前后连续两个(举一反三斜体加粗加删除线在波浪线的基础上前后加三个*即可)\n另起一行加单独三个或三个以上*号或下划线或(减号加空格连续三个) 即可形成分隔线\n一级标题，使用一个#加空格或者(普通文本文本下一行加=且文本上一行无文本)即可(还是建议用#) 二级标题，使用两个#加空格或者二级标题文本下一行加-(使用条件和一级标题使用等号相同)即可 同理三级三个#，四级也可以以此类推(最多六级标题) 列表形式，普通文本前加入*加空格 或者加入-加空格 但是不要混用 否则会认为是不同的列表 数字列表使用1.加空格 同理第二个就是2. 加空格 要按照顺序，如果想从3或者4开始那第一个从3. 或4. 开始写 嵌套列表 在一级列表后加入四个空格或者一个tab 达到此效果 三级列表在二级列表前加入四个空格即可或者一个tab 形成嵌套列表 结束列表使用两个换行，若使用两个空格加换行只会认为是上个列表的下一个段落\n列表想要达成类似打勾的效果在列表的*号后面加入[x]空格不打勾把x改成空格即可 代码块 1 2 3 4 5 public class Main{ public static void main(String[] args){ System.out.println(\u0026#34;Hello World\u0026#34;); } } 代码块，代码全选按tab键，且代码上方无文本或者用代码上下行使用三个反引号（波浪线下方）\n1 print(\u0026#34;Hello World\u0026#34;) 如果在行内要表明使用代码的话对应代码左右使用反引号即可例如equal.()\n引用 使用\u0026gt;进行引用，注意引用内换行也需要两个空格加换行\n或者每一行前面都加\u0026gt;，也可以在里面嵌套代码块\n1 2 def square(): return x*x 引用嵌套引用在引用内部再加个\u0026gt;\n同理在嵌套用再加个\u0026gt;\n链接 想要使用类似word的超链接如百度\n上文的百度的实现为[百度](www.baidu.com)\n想要购买xxx请前往我们的官网\n可重复用的超链接设置[内容][a]\n[a]: www.baidu.com 类似即可\n脚注1\n插入图片 使用！[]（）形式即可[]放入命名图片（）放入链接本地或者网络均可\n定义表格 姓名 年龄 性别 小明 18 男 小红daskldakdslajad 17 女 使用\n姓名 年龄 :\u0026ndash;左对齐，\u0026ndash;:右对齐,:\u0026ndash;:居中 扩展语法 之后的学习都需要开启特殊功能，由于本人使用不到只展示部分 高亮：文本前后在两个=号==高亮文本==\n下标x2\n使用x2，上标x2\n使用x^2^\n数学格式 单行$x= 1 + y$\n多行使用两个\n$$把公式前后包起来 $$\nx+y=10\n\\frac{1}{2} 表示1/2\nx_2^2 上标下标连着写可以同时存在\n$$\n本文主要参考markdown官网和哔哩哔哩视频\n我是脚注 脚注[^1],[^1]:我是脚注（\\删去即可）\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2024-10-25T00:00:00Z","permalink":"https://localhost:1313/p/md%E6%95%99%E7%A8%8B/","title":"md教程"},{"content":"正文测试 而这些并不是完全重要，更加重要的问题是， 带着这些问题，我们来审视一下学生会退会。 既然如何， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 我们不得不面对一个非常尴尬的事实，那就是， 可是，即使是这样，学生会退会的出现仍然代表了一定的意义。 学生会退会，发生了会如何，不发生又会如何。 经过上述讨论， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 学生会退会，到底应该如何实现。 这样看来， 在这种困难的抉择下，本人思来想去，寝食难安。 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 就我个人来说，学生会退会对我的意义，不能不说非常重大。 莎士比亚曾经提到过，人的一生是短的，但如果卑劣地过这一生，就太长了。这似乎解答了我的疑惑。 莫扎特说过一句富有哲理的话，谁和我一样用功，谁就会和我一样成功。这启发了我， 对我个人而言，学生会退会不仅仅是一个重大的事件，还可能会改变我的人生。 学生会退会，到底应该如何实现。 一般来说， 从这个角度来看， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 在这种困难的抉择下，本人思来想去，寝食难安。 了解清楚学生会退会到底是一种怎么样的存在，是解决一切问题的关键。 一般来说， 生活中，若学生会退会出现了，我们就不得不考虑它出现了的事实。 问题的关键究竟为何？ 而这些并不是完全重要，更加重要的问题是。\n奥斯特洛夫斯基曾经说过，共同的事业，共同的斗争，可以使人们产生忍受一切的力量。　带着这句话，我们还要更加慎重的审视这个问题： 一般来讲，我们都必须务必慎重的考虑考虑。 既然如此， 这种事实对本人来说意义重大，相信对这个世界也是有一定意义的。 带着这些问题，我们来审视一下学生会退会。 我认为， 我认为， 在这种困难的抉择下，本人思来想去，寝食难安。 问题的关键究竟为何？ 每个人都不得不面对这些问题。 在面对这种问题时， 要想清楚，学生会退会，到底是一种怎么样的存在。 我认为， 既然如此， 每个人都不得不面对这些问题。 在面对这种问题时， 那么， 我认为， 学生会退会因何而发生。\n引用 思念是最暖的忧伤像一双翅膀\n让我停不了飞不远在过往游荡\n不告而别的你 就算为了我着想\n这么沉痛的呵护 我怎么能翱翔\n最暖的憂傷 - 田馥甄\n图片 1 2 3 ![Photo by Florian Klauer on Unsplash](florian-klauer-nptLmg6jqDo-unsplash.jpg) ![Photo by Luca Bravo on Unsplash](luca-bravo-alS7ewQ41M8-unsplash.jpg) ![Photo by Helena Hertz on Unsplash](helena-hertz-wWZzXlDpMog-unsplash.jpg) ![Photo by Hudai Gayiran on Unsplash](hudai-gayiran-3Od_VKcDEAA-unsplash.jpg) 相册语法来自 Typlog\n","date":"2020-09-09T00:00:00Z","image":"https://localhost:1313/p/test-chinese/helena-hertz-wWZzXlDpMog-unsplash_hu4699868770670889127.jpg","permalink":"https://localhost:1313/p/test-chinese/","title":"Chinese Test"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block with Hugo\u0026rsquo;s internal highlight shortcode 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Diff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nHyperlinked image The above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2019-03-11T00:00:00Z","image":"https://localhost:1313/p/markdown-syntax-guide/pawel-czerwinski-8uZPynIu-rQ-unsplash_hu6307248181568134095.jpg","permalink":"https://localhost:1313/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Lorem est tota propiore conpellat pectoribus de pectora summo.\nRedit teque digerit hominumque toris verebor lumina non cervice subde tollit usus habet Arctonque, furores quas nec ferunt. Quoque montibus nunc caluere tempus inhospita parcite confusaque translucet patri vestro qui optatis lumine cognoscere flos nubis! Fronde ipsamque patulos Dryopen deorum.\nExierant elisi ambit vivere dedere Duce pollice Eris modo Spargitque ferrea quos palude Rursus nulli murmur; hastile inridet ut ab gravi sententia! Nomine potitus silentia flumen, sustinet placuit petis in dilapsa erat sunt. Atria tractus malis.\nComas hunc haec pietate fetum procerum dixit Post torum vates letum Tiresia Flumen querellas Arcanaque montibus omnes Quidem et Vagus elidunt The Van de Graaf Canon\nMane refeci capiebant unda mulcebat Victa caducifer, malo vulnere contra dicere aurato, ludit regale, voca! Retorsit colit est profanae esse virescere furit nec; iaculi matertera et visa est, viribus. Divesque creatis, tecta novat collumque vulnus est, parvas. Faces illo pepulere tempus adest. Tendit flamma, ab opes virum sustinet, sidus sequendo urbis.\nIubar proles corpore raptos vero auctor imperium; sed et huic: manus caeli Lelegas tu lux. Verbis obstitit intus oblectamina fixis linguisque ausus sperare Echionides cornuaque tenent clausit possit. Omnia putatur. Praeteritae refert ausus; ferebant e primus lora nutat, vici quae mea ipse. Et iter nil spectatae vulnus haerentia iuste et exercebat, sui et.\nEurytus Hector, materna ipsumque ut Politen, nec, nate, ignari, vernum cohaesit sequitur. Vel mitis temploque vocatus, inque alis, oculos nomen non silvis corpore coniunx ne displicet illa. Crescunt non unus, vidit visa quantum inmiti flumina mortis facto sic: undique a alios vincula sunt iactata abdita! Suspenderat ego fuit tendit: luna, ante urbem Propoetides parte.\n","date":"2019-03-09T00:00:00Z","image":"https://localhost:1313/p/placeholder-text/matt-le-SJSpo9hQf7s-unsplash_hu10664154974910995856.jpg","permalink":"https://localhost:1313/p/placeholder-text/","title":"Placeholder Text"},{"content":"Mathematical notation in a Hugo project can be enabled by using third party JavaScript libraries.\nIn this example we will be using KaTeX\nCreate a partial under /layouts/partials/math.html Within this partial reference the Auto-render Extension or host these scripts locally. Include the partial in your templates like so: 1 2 3 {{ if or .Params.math .Site.Params.math }} {{ partial \u0026#34;math.html\u0026#34; . }} {{ end }} To enable KaTeX globally set the parameter math to true in a project\u0026rsquo;s configuration To enable KaTeX on a per page basis include the parameter math: true in content files Note: Use the online reference of Supported TeX Functions\nExamples Inline math: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\nBlock math: $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$","date":"2019-03-08T00:00:00Z","permalink":"https://localhost:1313/p/math-typesetting/","title":"Math Typesetting"},{"content":"Emoji can be enabled in a Hugo project in a number of ways.\nThe emojify function can be called directly in templates or Inline Shortcodes.\nTo enable emoji globally, set enableEmoji to true in your site\u0026rsquo;s configuration and then you can type emoji shorthand codes directly in content files; e.g.\n🙈 :see_no_evil: 🙉 :hear_no_evil: 🙊 :speak_no_evil:\nThe Emoji cheat sheet is a useful reference for emoji shorthand codes.\nN.B. The above steps enable Unicode Standard emoji characters and sequences in Hugo, however the rendering of these glyphs depends on the browser and the platform. To style the emoji you can either use a third party emoji font or a font stack; e.g.\n1 2 3 .emoji { font-family: Apple Color Emoji, Segoe UI Emoji, NotoColorEmoji, Segoe UI Symbol, Android Emoji, EmojiSymbols; } ","date":"2019-03-05T00:00:00Z","image":"https://localhost:1313/p/emoji-support/the-creative-exchange-d2zvqp3fpro-unsplash_hu5876398126655421130.jpg","permalink":"https://localhost:1313/p/emoji-support/","title":"Emoji Support"}]